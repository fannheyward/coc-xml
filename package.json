{
  "name": "coc-xml",
  "version": "1.14.1",
  "description": "XML extension for coc.nvim",
  "main": "lib/index.js",
  "author": "Heyward Fann <fannheyward@gmail.com>",
  "license": "MIT",
  "scripts": {
    "clean": "rimraf lib",
    "build": "node esbuild.js",
    "lint": "eslint src --ext ts",
    "prepare": "node esbuild.js"
  },
  "engines": {
    "coc": "^0.0.80"
  },
  "keywords": [
    "coc.nvim",
    "xml"
  ],
  "activationEvents": [
    "onLanguage:xml",
    "onLanguage:xslt"
  ],
  "dependencies": {},
  "devDependencies": {
    "@rgrove/parse-xml": "^3.0.0",
    "@types/glob": "^7.1.3",
    "@types/node": "^14.0.24",
    "@types/node-fetch": "^2.5.7",
    "@types/semver": "^7.2.0",
    "@types/tunnel": "^0.0.2",
    "@typescript-eslint/eslint-plugin": "^4.7.0",
    "@typescript-eslint/parser": "^4.7.0",
    "coc.nvim": "^0.0.80",
    "esbuild": "^0.8.42",
    "eslint": "^7.6.0",
    "eslint-config-prettier": "^8.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "node-fetch": "^2.6.0",
    "path-exists": "^4.0.0",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.0",
    "semver": "^7.1.1",
    "tunnel": "^0.0.6",
    "typescript": "^4.0.2",
    "vscode-languageserver-protocol": "^3.16.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fannheyward/coc-xml"
  },
  "prettier": {
    "printWidth": 160,
    "singleQuote": true
  },
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "XML configuration",
      "properties": {
        "xml.trace.server": {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the XML language server.",
          "scope": "window"
        },
        "xml.catalogs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Array of XML Catalogs",
          "scope": "window"
        },
        "xml.logs.client": {
          "type": "boolean",
          "default": false,
          "description": "Should the server log to client output"
        },
        "xml.format.splitAttributes": {
          "type": "boolean",
          "default": false,
          "description": "Split multiple attributes each onto a new line",
          "scope": "window"
        },
        "xml.preferences.showSchemaDocumentationType": {
          "type": "string",
          "default": "all",
          "enum": [
            "documentation",
            "appinfo",
            "all",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Documentation comes from the `xs:documentation` element.",
            "Documentation comes from the `xs:appinfo` element.",
            "Documentation comes from the `xs:documentation` and `xs:appinfo` elements.",
            "Displays no documentation."
          ],
          "markdownDescription": "Specifies the source of the XML schema documentation displayed on hover and completion. Default is `all`.",
          "scope": "window"
        },
        "xml.preferences.quoteStyle": {
          "type": "string",
          "enum": [
            "single",
            "double"
          ],
          "default": "double",
          "markdownDescription": "Preferred quote style to use for completion: `single` quotes, `double` quotes. Default is `double`.",
          "scope": "window"
        },
        "xml.format.emptyElements": {
          "type": "string",
          "enum": [
            "ignore",
            "collapse",
            "expand"
          ],
          "default": "ignore",
          "markdownDescription": "Expand/collapse empty elements. Default is `ignore`.",
          "scope": "window"
        },
        "xml.format.enforceQuoteStyle": {
          "type": "string",
          "enum": [
            "preferred",
            "ignore"
          ],
          "markdownEnumDescriptions": [
            "Use preferred quote style set by `xml.preferences.quoteStyle` when formatting.",
            "Ignore quote style formatting."
          ],
          "default": "ignore",
          "markdownDescription": "Enforce `preferred` quote style (set by `#xml.preferences.quoteStyle#`) or `ignore` quote style when formatting. Default is `ignore`.",
          "scope": "window"
        },
        "xml.format.preserveAttributeLineBreaks": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Preserve line breaks that appear before and after attributes. This setting is overridden if `#xml.format.splitAttributes#` is set to `true`. Default is `false`.",
          "scope": "window"
        },
        "xml.format.xsiSchemaLocationSplit": {
          "type": "string",
          "enum": [
            "onElement",
            "onPair",
            "none"
          ],
          "markdownEnumDescriptions": [
            "Put a new line after each namespace and URI, arranging them into one column.",
            "Put a new line after each URI, arranging the content into pairs of namespace and URI.",
            "Ignore `xsi:schemaLocation` content formatting."
          ],
          "default": "none",
          "markdownDescription": "Split `xsi:schemaLocation` content. Default is `none`",
          "scope": "window"
        },
        "xml.format.joinCDATALines": {
          "type": "boolean",
          "default": false,
          "description": "Join lines in a CDATA tag's content",
          "scope": "window"
        },
        "xml.format.joinCommentLines": {
          "type": "boolean",
          "default": false,
          "description": "Join comment content on format",
          "scope": "window"
        },
        "xml.format.spaceBeforeEmptyCloseTag": {
          "type": "boolean",
          "default": true,
          "description": "Insert space before end of self closing tag. \nExample:\n  <tag/> -> <tag />",
          "scope": "window"
        },
        "xml.format.joinContentLines": {
          "type": "boolean",
          "default": false,
          "description": "Normalize the whitespace of content inside an element. Newlines and excess whitespace are removed.",
          "scope": "window"
        },
        "xml.format.preserveEmptyContent": {
          "type": "boolean",
          "default": false,
          "description": "Preserve empty content/whitespace in a tag.",
          "scope": "window"
        },
        "xml.format.preservedNewlines": {
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "default": 2,
          "description": "Preserve new lines that separate tags. The value represents the maximum number of new lines per section. A value of 0 removes all new lines.",
          "scope": "window"
        },
        "xml.format.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable ability to format document",
          "scope": "window"
        },
        "xml.format.quotations": {
          "type": "string",
          "enum": [
            "doubleQuotes",
            "singleQuotes"
          ],
          "default": "doubleQuotes",
          "description": "Which type of quotes to use for attribute values when formatting.",
          "scope": "window"
        },
        "xml.format.trimTrailingWhitespace": {
          "description": "Remove trailing whitespace when formatting",
          "type": "boolean",
          "default": false,
          "scope": "window"
        },
        "xml.format.trimFinalNewlines": {
          "description": "Remove newline characters at the end of the file when formatting",
          "type": "boolean",
          "default": false,
          "scope": "window"
        },
        "xml.fileAssociations": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "systemId": {
                "type": "string",
                "description": "The path or URL to the XML schema (XSD or DTD)"
              },
              "pattern": {
                "type": "string",
                "description": "File glob pattern. Example: **/*.Format.ps1xml\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              }
            },
            "required": [
              "systemId",
              "pattern"
            ]
          },
          "description": "Allows XML schemas to be associated to file name patterns.\n\nExample:\n[{\n  \"systemId\": \"path/to/file.xsd\",\n  \"pattern\": \"file1.xml\"\n},\n{\n  \"systemId\": \"http://www.w3.org/2001/XMLSchema.xsd\",\n  \"pattern\": \"**/*.xsd\"\n}]",
          "markdownDescription": "Allows XML schemas to be associated to file name patterns.\n\nExample:\n```json\n[{\n  \"systemId\": \"path/to/file.xsd\",\n  \"pattern\": \"file1.xml\"\n},\n{\n  \"systemId\": \"http://www.w3.org/2001/XMLSchema.xsd\",\n  \"pattern\": \"**/*.xsd\"\n}]\n```",
          "scope": "window"
        },
        "xml.completion.autoCloseTags": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable autoclosing of XML tags. \n\nIMPORTANT: Turn off editor.autoClosingTags for this to work",
          "scope": "window"
        },
        "xml.codeLens.enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable/disable XML CodeLens"
        },
        "xml.java.home": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Specifies the folder path to the JDK (8 or more recent) used to launch the XML Language Server.\nOn Windows, backslashes must be escaped, i.e.\n\"xml.java.home\": \"C:\\\\Program Files\\\\Java\\\\jdk1.8.0_161\"",
          "scope": "window"
        },
        "xml.server.vmargs": {
          "type": [
            "string",
            "null"
          ],
          "default": "-Xmx64M -XX:+UseG1GC -XX:+UseStringDeduplication",
          "description": "Specifies extra VM arguments used to launch the XML Language Server. Eg. use `-Xmx1G  -XX:+UseG1GC -XX:+UseStringDeduplication` to bypass class verification, increase the heap size to 1GB and enable String deduplication with the G1 Garbage collector",
          "scope": "window"
        },
        "xml.server.workDir": {
          "type": "string",
          "default": "~/.lemminx",
          "description": "Set a custom folder path for cached XML Schemas. An absolute path is expected, although the ~ prefix (for the user home directory) is supported.",
          "scope": "window"
        },
        "xml.validation.noGrammar": {
          "type": "string",
          "enum": [
            "ignore",
            "hint",
            "info",
            "warning",
            "error"
          ],
          "default": "hint",
          "description": "The message severity when a document has no associated grammar.",
          "scope": "window"
        },
        "xml.validation.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable all validation.",
          "scope": "window"
        },
        "xml.validation.schema": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable schema based validation. Ignored if \"xml.validation.enabled\": false.",
          "scope": "window"
        },
        "xml.validation.disallowDocTypeDecl": {
          "type": "boolean",
          "default": false,
          "description": "Enable/disable if a fatal error is thrown if the incoming document contains a DOCTYPE declaration.",
          "scope": "window"
        },
        "xml.validation.resolveExternalEntities": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable resolve of external entities.",
          "scope": "window"
        },
        "xml.symbols.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable/disable document symbols (Outline).",
          "scope": "window"
        },
        "xml.symbols.maxItemsComputed": {
          "type": "integer",
          "default": 5000,
          "markdownDescription": "The maximum number of outline symbols and folding regions computed (limited for performance reasons). Default is `5000`."
        },
        "xml.symbols.showReferencedGrammars": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show referenced grammars in the Outline. Default is `true.",
          "scope": "window"
        },
        "xml.symbols.filters": {
          "type": "array",
          "default": [],
          "items": {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "markdownDescription": "File glob pattern. Example: `**/*.Format.ps1xml`\n\nMore information on the glob syntax: https://docs.oracle.com/javase/tutorial/essential/io/fileOps.html#glob"
              },
              "expressions": {
                "type": "array",
                "default": [],
                "items": {
                  "type": "object",
                  "description": "The XML symbol expression.",
                  "properties": {
                    "xpath": {
                      "type": "string",
                      "markdownDescription": "The XPath expression of the filter."
                    },
                    "excluded": {
                      "type": "boolean",
                      "description": "Exclude/Include the node which matches the XPath expression ."
                    }
                  }
                },
                "markdownDescription": "Array of XML symbol expressions"
              }
            },
            "required": [
              "pattern",
              "expressions"
            ]
          },
          "markdownDescription": "Allows XML symbols filter to be associated to file name patterns.",
          "scope": "window"
        },
        "xml.symbols.excluded": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Disable document symbols (Outline) for the given file name patterns. Updating file name patterns does not automatically reload the Outline view for the relevant file(s). Each file must either be reopened or changed, in order to trigger an Outline view reload.\n\nExample:\n[\n \"**/*LargeFile.xml\"\n]",
          "scope": "window"
        }
      }
    },
    "commands": [
      {
        "command": "xml.show.references",
        "title": "Show XML references",
        "category": "XML"
      },
      {
        "command": "xml.updateLanguageServer",
        "title": "Download latest version of LemMinX from repo.eclipse.org",
        "category": "XML"
      }
    ]
  }
}
